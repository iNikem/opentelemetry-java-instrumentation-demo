plugins {
  id("com.github.johnrengelman.shadow") version "6.0.0"
}
configurations {
  customShadow
}
dependencies {
  customShadow project(path: ":custom", configuration: "shadow")
  implementation "io.opentelemetry.javaagent:opentelemetry-javaagent:${versions.opentelemetryJavaagent}:all"
}

tasks {
  processResources {
    dependsOn(configurations.customShadow)
    with copySpec {
      from(zipTree(configurations.customShadow.files.first())) {
        into("inst")
        rename("(^.*)\\.class\$", "\$1.classdata")
      }
    }
  }

  shadowJar {
    mergeServiceFiles {
      include("inst/META-INF/services/*")
    }
    exclude("**/module-info.class")
    manifest {
      attributes.put("Main-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
      attributes.put("Agent-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
      attributes.put("Premain-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
      attributes.put("Can-Redefine-Classes", "true")
      attributes.put("Can-Retransform-Classes", "true")
      attributes.put("Implementation-Vendor", "Demo")
      attributes.put("Implementation-Version", "demo-${project.version}-otel-${versions.opentelemetryJavaagent}")
    }
  }

  assemble {
    dependsOn(shadowJar)
  }
}